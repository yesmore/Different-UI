@use '../common/var' as *;
@use '../mixins/config' as *;

$df-btn-bg-colors: (
  'primary': $color-primary,
  'white': $color-white,
  'success': $color-success,
  'warning': $color-warning,
  'danger': $color-danger,
  'error': $color-error,
  'info': $color-info,
  'black': $color-black,
  'default': $color-primary,
);
$df-btn-size: (
  'mini': (
    60px,
    25px,
    130px,
  ),
  'small': (
    73px,
    30px,
    156px,
  ),
  'middle': (
    105px,
    35px,
    220px,
  ),
  'default': (
    105px,
    35px,
    220px,
  ),
  'large': (
    125px,
    40px,
    260px,
  ),
);

$df-btn-radius: (
  'mini': 1px,
  'small': var(--df-border-radius-small),
  'default': var(--df-border-radius-base),
  'middle': var(--df-border-radius-base),
  'large': var(--df-border-radius-round),
);

/* color */
@each $colorKey, $color in $df-btn-bg-colors {
  .#{$namespace}-btn-#{$colorKey} {
    background-color: $color;
  }
  .#{$namespace}-btn-plain-#{$colorKey} {
    background: var(--df-background-color-base);
    color: $color !important;
    border: var(--df-border-width-base) dashed $color !important;
  }
}

/* radius */
@each $key, $radius in $df-btn-radius {
  .#{$namespace}-btn-radius-#{$key} {
    border-radius: $radius;
  }
}

.df-btn {
  color: var(--df-color-white);
  border: none;
  margin: 5px;
  padding: 0 15px;
  font-family: 'Lato', sans-serif;
  font-weight: var(--df-font-weight-primary);
  cursor: pointer;
  transition: all var(--df-transition-duration) ease;
  position: relative;
  display: inline-block;
  // box-shadow: var(--df-box-shadow-custom);
  outline: none;

  &:disabled,
  &[disabled] {
    background-color: var(--df-disabled-fill-base);
    color: var(--df-disabled-color-base) !important;
    cursor: not-allowed;
    border: none !important;
  }
}

/* simple */
.df-btn-type-default {
  &:hover {
    opacity: 0.9;
  }
  &:hover:after {
    top: 0;
    height: 100%;
  }
  &:active {
    top: 1px;
  }
}

.df-btn-type-simple {
  &:hover {
    opacity: 0.9;
  }
  &:hover:after {
    top: 0;
    height: 100%;
  }
  &:active {
    opacity: 0.7;
  }
}

/* concave */
.df-btn-type-concave {
  &:before {
    height: 0%;
    width: 2px;
  }
  &:hover {
    box-shadow: 4px 4px 6px 0 rgba(255, 255, 255, 0.5),
      -4px -4px 6px 0 rgba(116, 125, 136, 0.5),
      inset -2px -2px 2px 0 rgba(255, 255, 255, 0.2),
      inset 2px 2px 2px 0 rgba(0, 0, 0, 0.4);
  }
}

/* bling */
.df-btn-type-bling {
  overflow: hidden;

  &:hover {
    text-decoration: none;
    color: var(--df-color-info-light);
    opacity: 0.7;
  }
  &:before {
    position: absolute;
    content: '';
    display: inline-block;
    top: -180px;
    left: 0;
    width: 30px;
    height: 100%;
    background-color: var(--df-background-color-base);
    animation: bling-ani 3s ease-in-out infinite;
  }
}

@each $colorKey, $color in $df-btn-bg-colors {
  /* trans */
  .#{$namespace}-btn-type-trans-#{$colorKey} {
    &:hover {
      color: $color;
      background: transparent;
      box-shadow: none;
    }
    &:before,
    &:after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      height: 2px;
      width: 0;
      background: $color;
      box-shadow: var(--df-box-shadow-inner);
      transition: var(--df-transition-duration) ease all;
    }
    &:after {
      right: inherit;
      top: inherit;
      left: 0;
      bottom: 0;
    }
    &:hover:before,
    &:hover:after {
      width: 100%;
      transition: 0.8s ease all;
    }
  }

  /* curtain down*/
  .#{$namespace}-btn-type-curtain-down-#{$colorKey} {
    z-index: var(--df-index-normal);

    &:after {
      position: absolute;
      content: '';
      width: 100%;
      height: 0;
      bottom: 0;
      left: 0;
      z-index: var(--df-index-bottom);
      border-radius: var(--df-border-radius-base);
      background-color: $color;
      background-image: linear-gradient(315deg, $color 0%, $color 74%);
      box-shadow: -7px -7px 20px 0px #fff9, -4px -4px 5px 0px #fff9,
        7px 7px 20px 0px #0002, 4px 4px 5px 0px #0001;
      transition: all var(--df-transition-duration) ease;
    }

    &:hover {
      color: #fff;
    }
    &:hover:after {
      top: 0;
      height: 100%;
    }
    &:active {
      top: 1px;
    }
  }

  /* curtain up*/
  .#{$namespace}-btn-type-curtain-up-#{$colorKey} {
    z-index: var(--df-index-normal);

    &:after {
      position: absolute;
      content: '';
      width: 100%;
      height: 0;
      top: 0;
      left: 0;
      z-index: var(--df-index-bottom);
      border-radius: var(--df-border-radius-base);
      background-color: $color;
      background-image: linear-gradient(
        315deg,
        $color 0%,
        rgba(255, 255, 255, 0.5) 74%
      );
      box-shadow: inset
          2px
          2px
          2px
          0px
          rgba(255, 255, 255, 0.5)
          7px
          7px
          20px
          0px
          rgba(0, 0, 0, 0.1),
        4px 4px 5px 0px rgba(0, 0, 0, 0.1);
      transition: all var(--df-transition-duration) ease;
    }
    &:hover {
      color: #fff;
    }
    &:hover:after {
      top: auto;
      bottom: 0;
      height: 100%;
    }
    &:active {
      top: 1px;
    }
  }

  /* curtain right*/
  .#{$namespace}-btn-type-curtain-right-#{$colorKey} {
    z-index: var(--df-index-normal);

    &:after {
      position: absolute;
      content: '';
      width: 0;
      height: 100%;
      top: 0;
      right: 0;
      z-index: var(--df-index-bottom);
      background-color: $color;
      border-radius: var(--df-border-radius-base);
      box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),
        7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);
      transition: all var(--df-transition-duration) ease;
    }
    &:hover {
      color: #fff;
    }
    &:hover:after {
      left: 0;
      width: 100%;
    }
    &:active {
      top: 1px;
    }
  }

  /* curtain left*/
  .#{$namespace}-btn-type-curtain-left-#{$colorKey} {
    z-index: var(--df-index-normal);

    &:after {
      position: absolute;
      content: '';
      width: 0;
      height: 100%;
      top: 0;
      right: 0;
      z-index: var(--df-index-bottom);
      direction: rtl;
      background-color: $color;
      border-radius: var(--df-border-radius-base);
      box-shadow: -7px -7px 20px 0px #fff9, -4px -4px 5px 0px #fff9,
        7px 7px 20px 0px #0002, 4px 4px 5px 0px #0001;
      transition: all var(--df-transition-duration) ease;
    }
    &:hover {
      color: #fff;
    }
    &:hover:after {
      left: auto;
      right: 0;
      width: 100%;
    }
    &:active {
      top: 1px;
    }
  }
}

@each $key, $size in $df-btn-size {
  .#{$namespace}-btn-size-#{$key} {
    min-width: #{nth($size, 1)};
    height: #{nth($size, 2)};
    line-height: #{nth($size, 2)};
  }

  .#{$namespace}-btn-round-#{$key} {
    min-width: #{nth($size, 2)} !important;
    height: #{nth($size, 2)} !important;
    border-radius: var(--df-border-radius-circle);
  }
}

@keyframes bling-ani {
  0% {
    -webkit-transform: scale(0) rotate(45deg);
    opacity: 0;
  }
  80% {
    -webkit-transform: scale(0) rotate(45deg);
    opacity: 0.5;
  }
  81% {
    -webkit-transform: scale(4) rotate(45deg);
    opacity: 1;
  }
  100% {
    -webkit-transform: scale(50) rotate(45deg);
    opacity: 0;
  }
}
